volumes:
  caddy-data:
  caddy-config:
  caddy-logs:
  pihole-config:
  pihole-dnsmasq:

services:
  caddy:
    build: caddy
    container_name: caddy
    privileged: true
    network_mode: host
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - caddy-data:/data
      - caddy-config:/config
      - caddy-logs:/var/log/caddy
      - /run/tailscale.nginx-auth.sock:/run/tailscale.nginx-auth.sock

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    build:
      context: homepage
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    privileged: true
    network_mode: host
    #cap_add:
      #- net_admin
      #- sys_module
    environment:
      - TZ=America/Chicago
      - WEBPASSWORD=${PIHOLE_PASSWORD}
      - FTLCONF_LOCAL_IPV4=100.99.19.88
      - VIRTUAL_HOST=ubuntu-test
      - WEB_BIND_ADDR=100.99.19.88
      - WEB_PORT=8888
      - INTERFACE=100.99.19.88
      - DNSMASQ_LISTENING=single
    #volumes:
      #- pihole-config:/etc/pihole
      #- pihole-dnsmasq:/etc/dnsmasq.d
    restart: unless-stopped

