server {
    listen       8088;
    listen  [::]:8088;
    server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;

		auth_request /auth;
		auth_request_set $auth_user $upstream_http_tailscale_user;
		auth_request_set $auth_name $upstream_http_tailscale_name;
		auth_request_set $auth_login $upstream_http_tailscale_login;
		auth_request_set $auth_tailnet $upstream_http_tailscale_tailnet;
		auth_request_set $auth_profile_picture $upstream_http_tailscale_profile_picture;

    }

	location /auth {
		internal;

		proxy_pass http://unix:/run/tailscale.nginx-auth.sock;
		proxy_pass_request_body off;

		proxy_set_header Host $http_host;
		proxy_set_header Remote-Addr $remote_addr;
		proxy_set_header Remote-Port $remote_port;
		proxy_set_header Original-URI $request_uri;

		proxy_set_header X-Webauth-User "$auth_user";
		proxy_set_header X-Webauth-Name "$auth_name";
		proxy_set_header X-Webauth-Login "$auth_login";
		proxy_set_header X-Webauth-Tailnet "$auth_tailnet";
		proxy_set_header X-Webauth-Profile-Picture "$auth_profile_picture";
	}

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

